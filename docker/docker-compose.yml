version: '3.5'

services:
  gochat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gochat_service
    image: gochat
    volumes:
      - ../:/app
    ports:
      - "8080:8080"
      - "8089:8089"
    depends_on:
      - postgres
      - redis
    networks:
      - gochat_net
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: '123456'
      PGDATA: /data/postgres
    volumes:
      - ./data:/data/postgres
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - gochat_net
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: 'root@jkopay.com'
      PGADMIN_DEFAULT_PASSWORD: '123456'
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    networks:
      - gochat_net
    restart: unless-stopped
  redis:
    container_name: redis
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    networks:
      - gochat_net
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ../:/data

  apidoc:
    container_name: apidoc
    build:
      context: .
      dockerfile: Dockerfile-apidoc
    ports:
      - "3000:3000"
    volumes:
      - ../:/usr/src/app
    command: sh -c "apidoc -i /usr/src/app -o /usr/src/app/apidoc && tail -f /dev/null"


networks:
  gochat_net:
    driver: bridge
